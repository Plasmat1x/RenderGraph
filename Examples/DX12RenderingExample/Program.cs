using Silk.NET.Maths;
using Silk.NET.Windowing;

using System.Text;

namespace DX12RenderingExample;

public static class Program
{
  //TODO: —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Ä–∏—Å—É–µ—Ç—Å—è –Ω–æ —É –Ω–µ–≥–æ —Ü–≤–µ—Ç–∞ –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è.
  //–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —à–µ–π–¥–µ—Ä—ã –∏ –≤—Å–µ —Å —ç—Ç–º —Å–≤—è–∑–∞–Ω–æ–µ.
  //–ï—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —á—Ç–æ –º–∞—Ç—Ä–∏—Ü—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ Col-major, —á—Ç–æ —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  public static void Main(string[] args)
  {
    Console.OutputEncoding = Encoding.UTF8;

    Console.WriteLine("üöÄ Starting DX12 Rendering Example...");

    var example = new RenderingExample();
    int windowWidth = 1920;
    int windowHeight = 1080;

    var window = Window.Create(new WindowOptions
    {
      API = Silk.NET.Windowing.GraphicsAPI.Default,
      Size = new Vector2D<int>(windowWidth, windowHeight),
      Position = new Vector2D<int>(200, 200),
      IsVisible = true,
      TopMost = false,
      WindowBorder = WindowBorder.Resizable,
      WindowState = WindowState.Normal,
      Title = "Hello"
    });


    window.Load += () => {
      var mockWindowHandle = window.Native.DXHandle.GetValueOrDefault();
      example.Initialize(mockWindowHandle, (uint)windowWidth, (uint)windowHeight);
      example.DemonstrateBatchUpload();
      example.DemonstrateReadback();
    };

    window.Closing += example.Cleanup;
    window.Render += _ => example.Render();
    window.Update += _ => {
      if(example.framesCount >= 10)
      {
        //window.Close();
      }
    };

    window.Run();

    Console.WriteLine("üëã Example completed!");
  }
}
